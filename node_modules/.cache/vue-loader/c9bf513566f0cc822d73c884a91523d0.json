{"remainingRequest":"/Users/zachjohnson/Desktop/Projects/Committed Unity/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zachjohnson/Desktop/Projects/Committed Unity/src/views/Main.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/zachjohnson/Desktop/Projects/Committed Unity/src/views/Main.vue","mtime":1699554717792},{"path":"/Users/zachjohnson/Desktop/Projects/Committed Unity/node_modules/css-loader/dist/cjs.js","mtime":1699554827634},{"path":"/Users/zachjohnson/Desktop/Projects/Committed Unity/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1699554827893},{"path":"/Users/zachjohnson/Desktop/Projects/Committed Unity/node_modules/postcss-loader/src/index.js","mtime":1699554827541},{"path":"/Users/zachjohnson/Desktop/Projects/Committed Unity/node_modules/cache-loader/dist/cjs.js","mtime":1699554827551},{"path":"/Users/zachjohnson/Desktop/Projects/Committed Unity/node_modules/vue-loader/lib/index.js","mtime":1699554827697}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI21haW4tZmVlZCB7CiAgbWFyZ2luLXRvcDogMjBweDsKfQoubWVldGluZy1saXN0LW1haW4tdmlldyB7CiAgcGFkZGluZzogMCAwIDAgMTJweDsKICBtaW4td2lkdGg6IDQ1MHB4OwogIG1heC13aWR0aDogNzUwcHg7CiAgZmxleC1ncm93OiAyOwp9CgoudGl0bGUgewogIHBhZGRpbmc6IDMlOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLmNhcmQgewogIGRpc3BsYXk6IGZsZXg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgouY2l0eSB7CiAgZm9udC1zdHlsZTogYm9sZDsKfQo="},{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Main.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"main-feed\">\n    <NavBar :username=\"username\" :isAdmin=\"user.is_admin\" view=\"main\" />\n    <div v-if=\"!username\">\n      <div class=\"title\">\n        <h2>Welcome to</h2>\n        <br />\n        <h1>CommittedUnity!</h1>\n        <br />\n        <router-link :to=\"{ name: 'signIn' }\">\n          Sign in or create an account</router-link\n        >\n        to save Meetings and more!\n      </div>\n    </div>\n    <div v-if=\"username\">\n      <v-row v-if=\"currTab === 'all-meetings'\">\n        <v-spacer></v-spacer>\n        <FilterLeftBar :isAdmin=\"user.is_admin\" />\n        <div class=\"meeting-list-main-view\">\n          <MeetingList\n            :meetings=\"meetings\"\n            emptyMsg=\"There are no meetings that match your search.\"\n          />\n        </div>\n        <v-spacer></v-spacer>\n      </v-row>\n\n      <v-row v-if=\"currTab === 'my-meetings'\">\n        <v-spacer></v-spacer>\n        <FilterLeftBar :isAdmin=\"user.is_admin\" />\n        <div class=\"meeting-list-main-view\">\n          <MeetingList\n            :meetings=\"myMeetings\"\n            emptyMsg=\"There are no meetings that match your search.\"\n          />\n        </div>\n        <v-spacer></v-spacer>\n      </v-row>\n\n      <v-row v-if=\"currTab === 'discover-meetings'\">\n        <v-spacer></v-spacer>\n        <DiscoverLeftBar :recTags=\"recTags\" />\n        <div class=\"meeting-list-main-view\">\n          <MeetingList\n            :meetings=\"recMeetings\"\n            emptyMsg=\"There are no recommended meetings. Try adding more interests or wait for\n      more meetings to be posted!\"\n          />\n        </div>\n        <v-spacer></v-spacer>\n      </v-row>\n\n      <div v-if=\"currTab === 'profile'\">\n        <ProfileHeader :user=\"user\" />\n      </div>\n      <div v-if=\"currTab === 'attend'\">\n        <AttendanceChecker />\n      </div>\n      <div v-if=\"currTab === 'leaderboard'\">\n        <UserList\n          :users=\"thisMonthUserRankings\"\n          :title=\"'Top users this month'\"\n        />\n        <!-- <UserList :users=\"allTimeUserRankings\" :title=\"'All time time top users'\"/> -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { eventBus } from \"../main\";\nimport MeetingList from \"../components/MeetingList.vue\";\nimport UserList from \"../components/UserList.vue\";\nimport NavBar from \"../components/NavBar.vue\";\nimport AttendanceChecker from \"../components/AttendanceChecker.vue\";\nimport ProfileHeader from \"../components/ProfileHeader.vue\";\nimport FilterLeftBar from \"../components/FilterLeftBar.vue\";\nimport DiscoverLeftBar from \"../components/DiscoverLeftBar.vue\";\n\nexport default {\n  name: \"Main\",\n  components: {\n    MeetingList,\n    UserList,\n    NavBar,\n    AttendanceChecker,\n    ProfileHeader,\n    FilterLeftBar,\n    DiscoverLeftBar,\n  },\n  data() {\n    return {\n      currTab: \"all-meetings\",\n      user: \"\",\n      meetings: [],\n      allMeetings: [],\n      myMeetings: [],\n      recTags: [],\n      recMeetings: [],\n      thisMonthUserRankings: [],\n      allTimeUserRankings: [],\n    };\n  },\n  computed: {\n    username: function () {\n      return this.$cookie.get(\"auth-username\");\n    },\n  },\n  created: function () {\n    this.getThisMonthUserRankings();\n    eventBus.$on(\"change-main-tab\", (data) => {\n      this.currTab = data.tab;\n      if (this.currTab === \"discover-meetings\") {\n        this.getRecTags();\n      }\n    });\n\n    eventBus.$on(\"refresh-user-list\", () => {\n      this.getUser();\n    });\n\n    eventBus.$on(\"create-meeting-success\", (res) => {\n      this.meetings.unshift(res.data);\n      this.getAllMeetings();\n    });\n\n    eventBus.$on(\"edit-meeting-success\", () => {\n      // this.meetings.unshift(res.data);\n      this.getAllMeetings();\n    });\n\n    eventBus.$on(\"delete-meeting-success\", () => {\n      this.getAllMeetings();\n    });\n\n    eventBus.$on(\"delete-meeting-success\", () => {\n      this.getAllMeetings();\n    });\n\n    eventBus.$on(\"changed-rsvp\", () => {\n      this.getAllMeetings();\n      this.getRecMeetings();\n    });\n\n    eventBus.$on(\"increment\", () => {\n      this.getUser();\n    });\n\n    eventBus.$on(\"search-by-name\", (res) => {\n      if (res.searchName) {\n        this.meetings = this.meetings.filter((m) =>\n          m.name.toUpperCase().includes(res.searchName.toUpperCase())\n        );\n      } else {\n        this.getAllMeetings();\n      }\n    });\n\n    eventBus.$on(\"refresh\", () => {\n      this.getAllMeetings();\n    });\n\n    eventBus.$on(\"search-by-tags\", (res) => {\n      if (res.tags.length > 0) {\n        let checker = (arr, target) => target.every((v) => arr.includes(v));\n        this.meetings = this.allMeetings.filter((m) =>\n          checker(m.tags, res.tags)\n        );\n        // if (this.tab === \"my-meetings\") {\n        this.myMeetings = this.myMeetings.filter((m) =>\n          checker(m.tags, res.tags)\n        );\n        // }\n      } else {\n        this.getAllMeetings();\n      }\n    });\n\n    eventBus.$on(\"search-by-date\", (res) => {\n      this.meetings = this.meetings.filter(\n        (m) => m.start_date_time.substring(0, 10) === res.date\n      );\n      // if (this.tab === \"my-meetings\") {\n      this.myMeetings = this.myMeetings.filter(\n        (m) => m.start_date_time.substring(0, 10) === res.date\n      );\n      // }\n    });\n    eventBus.$on(\"attend-success\", () => {\n      this.getThisMonthUserRankings();\n    });\n  },\n  methods: {\n    getThisMonthUserRankings() {\n      axios\n        .get(\"/api/users/\")\n        .then((response) => {\n          this.thisMonthUserRankings = response.data\n            .filter((u) => !u.is_admin)\n            .sort(function (user1, user2) {\n              return user2.points - user1.points;\n            });\n        })\n        .catch((error) => {\n          this.thisMonthUserRankings = [];\n          eventBus.$emit(\"error-msg\", {\n            errorMsg:\n              error.response.status + \" error: \" + error.response.data.error,\n          });\n        });\n    },\n    getAllMeetings() {\n      axios\n        .get(\"/api/meetings\")\n        .then((response) => {\n          this.meetings = response.data;\n          this.allMeetings = response.data;\n          if (this.user.is_admin) {\n            this.myMeetings = this.allMeetings.filter(\n              (m) => m.host_id === this.user._id\n            );\n          } else {\n            this.myMeetings = this.allMeetings.filter(\n              (m) =>\n                m.going.map((u) => u.username).includes(this.username) ||\n                m.maybe.map((u) => u.username).includes(this.username)\n            );\n          }\n        })\n        .catch((error) => {\n          this.meetings = [];\n          eventBus.$emit(\"error-msg\", {\n            errorMsg:\n              error.response.status + \" error: \" + error.response.data.error,\n          });\n        });\n    },\n    getUser() {\n      axios\n        .get(`api/users/${this.username}`)\n        .then((response) => {\n          this.user = response.data;\n        })\n        .catch((error) => {\n          eventBus.$emit(\"error-msg\", {\n            errorMsg: error.response.data.error,\n          });\n        });\n    },\n    getRecTags() {\n      axios\n        .get(\"api/users/tags\")\n        .then((response) => {\n          this.recTags = response.data;\n        })\n        .catch((error) => {\n          eventBus.$emit(\"error-msg\", {\n            errorMsg: error.response.data.error,\n          });\n        });\n    },\n    getRecMeetings() {\n      axios\n        .get(\"api/users/recMeetings\")\n        .then((response) => {\n          this.recMeetings = response.data;\n          console.log(\"MAIN\", this.recMeetings);\n        })\n        .catch((error) => {\n          eventBus.$emit(\"error-msg\", {\n            errorMsg: error.response.data.error,\n          });\n        });\n    },\n  },\n  mounted: function () {\n    this.getUser();\n    this.getAllMeetings();\n  },\n};\n</script>\n\n<style>\n#main-feed {\n  margin-top: 20px;\n}\n.meeting-list-main-view {\n  padding: 0 0 0 12px;\n  min-width: 450px;\n  max-width: 750px;\n  flex-grow: 2;\n}\n\n.title {\n  padding: 3%;\n  text-align: center;\n}\n\n.card {\n  display: flex;\n  text-align: center;\n}\n\n.city {\n  font-style: bold;\n}\n</style>\n"]}]}